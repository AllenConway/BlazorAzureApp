name: Build and Deploy to Azure

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-app
        path: ${{ github.workspace }}/publish

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Get Terraform Outputs
      id: terraform-outputs
      run: |
        cd ./terraform
        terraform init
        echo "rg_name=$(terraform output -raw resource_group_name)" >> "$GITHUB_OUTPUT"
        echo "app_plan_name=$(terraform output -raw app_service_plan_name)" >> "$GITHUB_OUTPUT"
        echo "app_name=$(terraform output -raw app_service_name)" >> "$GITHUB_OUTPUT"

    - name: Terraform Import Resources
      run: |
        # Import App Service Plan
        terraform import azurerm_service_plan.asp "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ steps.terraform-outputs.outputs.rg_name }}/providers/Microsoft.Web/serverFarms/${{ steps.terraform-outputs.outputs.app_plan_name }}"
        
        # Import Web App
        terraform import azurerm_linux_web_app.app "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ steps.terraform-outputs.outputs.rg_name }}/providers/Microsoft.Web/sites/${{ steps.terraform-outputs.outputs.app_name }}"
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ steps.terraform-outputs.outputs.app_name }}
        package: ${{ github.workspace }}/publish